package dao.client;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;
import java.util.Set;

import factory.Client;

public class ClientsDAOFichier implements ClientsDAO {

	
	public List<Client> FindAll() {
		Properties prop = new Properties();
		InputStream input = null;
		 Set<String> ch;
		 String ch2;
		 String login;
		int a;
		
		try {

			input = new FileInputStream("src/clients.properties");

			// load a properties file
			prop.load(input);
			ch = prop.stringPropertyNames();
			prop.elements();
			
			Iterator iterator = ch.iterator();
			while(iterator.hasNext())
			{
			
				login = (String) iterator.next();
				ch2 = prop.getProperty(login);
				String str[] = ch2.split("&");
				System.out.println(" login:"+login);
				for (int i = 0 ; i<str.length ; i++){
					System.out.println(str[i]);
				}
				
			}
						
			
		} catch (IOException ex) {
			ex.printStackTrace();
		} finally {
			if (input != null) {
				try {
					input.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		return null;
	}


	public void save(Client client) {
		Properties prop = new Properties();
		OutputStream output = null;
		InputStream input=null;
		try {

			
			input = new FileInputStream("src/clients.properties");
			
			prop.load(input);
			
			prop.setProperty(client.getIdentifiant(), chaineSauvegardeClient(client.getNom(),client.getPrenom(),client));
			
			
			output = new FileOutputStream("src/clients.properties");
			prop.store(output, null);
			

		} catch (IOException io) {
			io.printStackTrace();
		} finally {
			if (output != null) {
				try {
					output.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}

		}
		
	}
	
	private String chaineSauvegardeClient(String nom, String prenom,Client client){
		StringBuilder ch = new StringBuilder();
		Integer nbcompte;
		ch.append("nom:");
		ch.append(nom);
		ch.append("&prenom:");
		ch.append(prenom);		
		ch.append("&comptes_courant:");		
		nbcompte = client.nbCompte();
		for (int i=0; i<nbcompte;i++)
		{
			ch.append("CC00");
			ch.append(nbcompte.toString());
			ch.append(",");
		}
		
		return ch.toString();
	}



}
